<?xml version="1.0" encoding="UTF-8"?><apiPackage id="com.tuarua"><apiName>com.tuarua</apiName><apiDetail/><apiClassifier id="com.tuarua:WebViewANE"><apiName>WebViewANE</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua:WebViewANE:WebViewANE"><apiName>WebViewANE</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="com.tuarua:WebViewANE:addCallback"><apiName>addCallback</apiName><shortdesc>
     
     </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>functionName</apiItemName><apiType value="String"/><apiDesc>name of the function as called from Javascript
     </apiDesc></apiParam><apiParam><apiItemName>closure</apiItemName><apiType value="Function"/><apiDesc>Actionscript function to call when functionName is called from Javascript
     
     Adds a callback in the webView. These should be added before .init() is called.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:addEventListener"><apiName>addEventListener</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam><apiParam><apiItemName>priority</apiItemName><apiType value="int"/><apiData>0</apiData></apiParam><apiParam><apiItemName>useWeakReference</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:addTab"><apiName>addTab</apiName><shortdesc> Windows + OSX only </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>initialUrl</apiItemName><apiType value="flash.net:URLRequest"/><apiData>null</apiData></apiParam></apiOperationDef><apiDesc> Windows + OSX only </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:allowsMagnification"><apiName>allowsMagnification</apiName><shortdesc>
     
     </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Whether the page allows magnification functionality
     <b>Ignored on iOS.</b>
     </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:backForwardList"><apiName>backForwardList</apiName><shortdesc>
     
     </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>
     <p><b>Ignored on Windows and Android.</b></p>
     </apiDesc><apiOperationClassifier>com.tuarua.webview:BackForwardList</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:callJavascriptFunction"><apiName>callJavascriptFunction</apiName><shortdesc>
     
     </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>functionName</apiItemName><apiType value="String"/><apiDesc>name of the Javascript function to call
     </apiDesc></apiParam><apiParam><apiItemName>closure</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>Actionscript function to call when Javascript functionName is called. If null then no
     actionscript function is called, aka a 'fire and forget' call.
     </apiDesc></apiParam><apiParam><apiItemName>args</apiItemName><apiType value="restParam"/><apiDesc>arguments to send to the Javascript function
     
     <p>Call a javascript function.</p>
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     
     </apiDesc><example>
     <codeblock rev="3.0">
     // Logs to the console. No result expected.
     webView.callJavascriptFunction("as_to_js",asToJsCallback,1,"a",77);
     
     public function asToJsCallback(jsResult:JavascriptResult):void {
        trace("asToJsCallback");
        trace("jsResult.error", jsResult.error);
        trace("jsResult.result", jsResult.result);
        trace("jsResult.message", jsResult.message);
        trace("jsResult.success", jsResult.success);
        var testObject:= jsResult.result;
        trace(testObject);
     }
     </codeblock>

     </example><example>
     <codeblock rev="3.0">
     // Calls Javascript function passing 3 args. Javascript function returns an
     // object which is automatically mapped to an
     // Actionscript Object
     webView.callJavascriptFunction("console.log",null,"hello console. The is AIR");
     
     // function in HTML page
     function as_to_js(numberA, stringA, numberB, obj) {
     var person = {
         name: "Jim Cowart",
         response: {
             name: "Chattanooga",
                population: 167674
            }
        };
        return person;
     }
     </codeblock>
     </example></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:capture"><apiName>capture</apiName><shortdesc>
     Captures the webView to BitmapData.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>onComplete</apiItemName><apiType value="Function"/><apiDesc>function(result:BitmapData)
     </apiDesc></apiParam><apiParam><apiItemName>cropTo</apiItemName><apiType value="flash.geom:Rectangle"/><apiData>null</apiData><apiDesc>optionally crops to the supplied Rectangle
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Captures the webView to BitmapData.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:clearCache"><apiName>clearCache</apiName><shortdesc>
     Clears the browser cache.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
     Clears the browser cache. Available on iOS, OSX, Android only.
     <p><b>Ignored on Windows.</b></p>
     <p>You cannot clear the cache on Windows while CEF is running. This is a known limitation.
     You can delete the contents of the value of your settings.cef.cachePath using Actionscript
     only before you call .init(). Calling after .dispose() may cause file locks as the files may
     still be 'owned' by the CEF process</p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:clearRequestHeaders"><apiName>clearRequestHeaders</apiName><shortdesc>
     Clears any persistent requestHeaders added to URLRequest
     </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
     Clears any persistent requestHeaders added to URLRequest
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:closeDevTools"><apiName>closeDevTools</apiName><shortdesc>
     Close the Chromium dev tools
     Disables Inspect Element on right click on OSX
     On Android disconnects from chrome://inspect
     </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
     Close the Chromium dev tools
     <p>Disables Inspect Element on right click on OSX</p>
     <p>On Android disconnects from chrome://inspect</p>
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:closeTab"><apiName>closeTab</apiName><shortdesc> Windows + OSX only</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc> Windows + OSX only</apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:deleteCookies"><apiName>deleteCookies</apiName><shortdesc>
     Deletes all cookies
     </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
     Deletes all cookies
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:dispose"><apiName>dispose</apiName><shortdesc>
     This cleans up the webview and all related processes.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
     This cleans up the webview and all related processes.
     <p><b>It is important to call this when the app is exiting.</b></p>
     </apiDesc><example>
     <codeblock rev="3.0">
     NativeApplication.nativeApplication.addEventListener(flash.events.Event.EXITING, onExiting);
     private function onExiting(event:Event):void {
        webView.dispose();
     }</codeblock>
     
     </example></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:evaluateJavascript"><apiName>evaluateJavascript</apiName><shortdesc>
     
     </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>code</apiItemName><apiType value="String"/><apiDesc>Javascript string to evaluate.
     </apiDesc></apiParam><apiParam><apiItemName>closure</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>Actionscript function to call when the Javascript string is evaluated. If null then no
     actionscript function is called, aka a 'fire and forget' call.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     
     </apiDesc><example>
     <codeblock rev="3.0">
     // Set the body background to yellow. No result expected
     webView.evaluateJavascript('document.getElementsByTagName("body")[0].style.backgroundColor = "yellow";');
     </codeblock>
     </example><example>
     <codeblock rev="3.0">
     // Retrieve contents of div. Result is returned to Actionscript function 'onJsEvaluated'
     webView.evaluateJavascript("document.getElementById('output').innerHTML;", onJsEvaluated)
     private function onJsEvaluated(jsResult:JavascriptResult):void {
        trace("innerHTML of div is:", jsResult.result);
     }
     </codeblock>
     
     </example></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:focus"><apiName>focus</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:goBack"><apiName>goBack</apiName><shortdesc>
     Navigates back.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
     Navigates back.
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:goForward"><apiName>goForward</apiName><shortdesc>
     Navigates forward.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
     Navigates forward.
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:go"><apiName>go</apiName><shortdesc>
     
     </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>offset</apiItemName><apiType value="int"/><apiData>1</apiData><apiDesc>Navigate forward (eg +1) or back (eg -1)
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:init"><apiName>init</apiName><shortdesc>
     
     </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>stage</apiItemName><apiType value="flash.display:Stage"/><apiDesc>    </apiDesc></apiParam><apiParam><apiItemName>viewPort</apiItemName><apiType value="flash.geom:Rectangle"/><apiDesc>    </apiDesc></apiParam><apiParam><apiItemName>initialUrl</apiItemName><apiType value="flash.net:URLRequest"/><apiData>null</apiData><apiDesc>Url to load when the view loads
     </apiDesc></apiParam><apiParam><apiItemName>settings</apiItemName><apiOperationClassifier>com.tuarua.webview:Settings</apiOperationClassifier><apiData>null</apiData><apiDesc>    </apiDesc></apiParam><apiParam><apiItemName>scaleFactor</apiItemName><apiType value="Number"/><apiData>1.0</apiData><apiDesc>iOS, Android only
     </apiDesc></apiParam><apiParam><apiItemName>backgroundColor</apiItemName><apiType value="uint"/><apiData>0xFFFFFFFF</apiData><apiDesc>value of the view's background color in ARGB format.
     <p>Initialises the webView. N.B. The webView is set to visible = false initially.</p>
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:injectScript"><apiName>injectScript</apiName><shortdesc>
     
     </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>code</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Javascript to inject, if any.
     </apiDesc></apiParam><apiParam><apiItemName>scriptUrl</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>is the URL where the script in question can be found, if any. Windows only
     </apiDesc></apiParam><apiParam><apiItemName>startLine</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>is the base line number to use for error reporting. Windows only
     
     <p>Specify either code or scriptUrl. These are injected into the main Frame when it is loaded. Call before
     load() method</p>
     <p><b>Ignored on Android.</b></p>
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:loadFileURL"><apiName>loadFileURL</apiName><shortdesc>
     
     </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>url</apiItemName><apiType value="String"/><apiDesc>full path to the file on the local file system
     </apiDesc></apiParam><apiParam><apiItemName>allowingReadAccessTo</apiItemName><apiType value="String"/><apiDesc>path to the root of the document
     
     Loads a file from the local file system into the webView.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:loadHTMLString"><apiName>loadHTMLString</apiName><shortdesc>
     
     </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>html</apiItemName><apiType value="String"/><apiDesc>HTML provided as a string
     </apiDesc></apiParam><apiParam><apiItemName>baseUrl</apiItemName><apiType value="flash.net:URLRequest"/><apiData>null</apiData><apiDesc>url which will display as the address
     
     Loads a HTML string into the webView.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:load"><apiName>load</apiName><shortdesc>
     </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>url</apiItemName><apiType value="flash.net:URLRequest"/><apiDesc>    </apiDesc></apiParam></apiOperationDef><apiDesc>
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:printToPdf"><apiName>printToPdf</apiName><shortdesc>
     </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>savePath</apiItemName><apiType value="String"/><apiDesc>path to save the pdf to.
     
     Prints the webView to a pdf.
     <p><b>Windows only.</b></p>
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:print"><apiName>print</apiName><shortdesc>
     Prints the webView.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
     Prints the webView.
     <p><b>Windows only.</b></p>
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:reloadFromOrigin"><apiName>reloadFromOrigin</apiName><shortdesc>
     Forces a reload of the page (i.e.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
     Forces a reload of the page (i.e. ctrl F5)
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:reload"><apiName>reload</apiName><shortdesc>
     Reloads the current page.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
     Reloads the current page.
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:removeCallback"><apiName>removeCallback</apiName><shortdesc>
     
     </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>functionName</apiItemName><apiType value="String"/><apiDesc>name of the function to remove. This function should have been added via .addCallback() method
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:removeEventListener"><apiName>removeEventListener</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:showDevTools"><apiName>showDevTools</apiName><shortdesc>
     Shows the Chromium dev tools on Windows
     Enables Inspect Element on right click on OSX
     On Android use Chrome on connected computer and navigate to chrome://inspect
     </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
     Shows the Chromium dev tools on Windows
     <p>Enables Inspect Element on right click on OSX</p>
     <p>On Android use Chrome on connected computer and navigate to chrome://inspect</p>
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:stopLoading"><apiName>stopLoading</apiName><shortdesc>
     Stops loading the current page.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
     Stops loading the current page.
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:zoomIn"><apiName>zoomIn</apiName><shortdesc>
     Zooms in
     
     </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
     Zooms in
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua:WebViewANE:zoomOut"><apiName>zoomOut</apiName><shortdesc> Zooms out</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Zooms out</apiDesc></apiOperationDetail></apiOperation><apiValue id="com.tuarua:WebViewANE:currentTab:get"><apiName>currentTab</apiName><shortdesc>Windows + OSX only</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>Windows + OSX only</apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua:WebViewANE:isInited:get"><apiName>isInited</apiName><shortdesc>
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua:WebViewANE:tabDetails:get"><apiName>tabDetails</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Vector$com.tuarua.webview:TabDetails"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua:WebViewANE:viewPort:get"><apiName>viewPort</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.geom:Rectangle"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua:WebViewANE:visible:get"><apiName>visible</apiName><shortdesc>
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
     </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>